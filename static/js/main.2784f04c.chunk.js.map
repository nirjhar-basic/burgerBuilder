{"version":3,"sources":["assests/images/burger-logo.png","hoc/Auxilary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/BackDrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BulidControl/BulidControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxilary","props","children","logo","className","src","burgerLogo","alt","navigationItem","href","link","active","navigationItems","backdrop","show","onClick","clicked","sideDrawer","Backdrop","open","closed","toolbar","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","drawerToggleClicked","this","Component","BurgerIngredient","ingredient","type","burger","tranformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","bulidControl","label","removed","added","controls","bulidControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","disabled","ordered","modal","modalClose","style","transform","opacity","button","btnType","join","ordeSummary","purchaseCanceled","purchaseContinued","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasable","purchasing","addIngredient","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredient","oldCount","priceDeduction","purchaseHandler","onModalClose","purchaseContinueHandler","alert","sum","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2784f04c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Auxilary = (props) => props.children;\r\n\r\nexport default Auxilary;\r\n","import React from \"react\";\r\n\r\nimport burgerLogo from \"../../assests/images/burger-logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst logo = (props) => (\r\n  <div className='Logo'>\r\n    <img src={burgerLogo} alt='My burger' />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\n\r\nimport \"./NavigationItem.css\";\r\n\r\nconst navigationItem = (props) => (\r\n  <li className='NavigationItem'>\r\n    <a href={props.link} className={props.active ? \"active\" : null}>\r\n      {props.children}\r\n    </a>\r\n  </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\n\r\nimport \"./NavigationItems.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className='NavigationItems'>\r\n    <NavigationItem link='/' active>\r\n      Burger Builder\r\n    </NavigationItem>\r\n    <NavigationItem link='/'>Checkout</NavigationItem>\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\n\r\nimport \"./BackDrop.css\";\r\n\r\nconst backdrop = (props) =>\r\n  props.show ? <div className='BackDrop' onClick={props.clicked}></div> : null;\r\nexport default backdrop;\r\n","import React from \"react\";\r\n\r\nimport Logo from \"../../Logo/Logo\";\r\nimport \"./SideDrawer.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/BackDrop/Backdrop\";\r\nimport Auxilary from \"../../../hoc/Auxilary\";\r\n\r\nconst sideDrawer = (props) => {\r\n  return (\r\n    <Auxilary>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className='SideDrawer'>\r\n        <div className='LogoSide'>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </Auxilary>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React from \"react\";\r\n\r\nimport Logo from \"../../Logo/Logo\";\r\nimport \"./Toolbar.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\n\r\nconst toolbar = (props) => (\r\n  <header className='Toolbar'>\r\n    <div>Menu</div>\r\n    <div className='LogoTool'>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavigationItems />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Auxilary from \"../../hoc/Auxilary\";\r\nimport \"./Layout.css\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auxilary>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className='content'>{this.props.children}</main>\r\n      </Auxilary>\r\n    );\r\n  }\r\n}\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./BurgerIngredient.css\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className='BreadBottom'></div>;\r\n        break;\r\n\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className='BreadTop'>\r\n            <div className='Seeds1'></div>\r\n            <div className='Seeds2'></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className='Meat'></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className='Cheese'></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className='Bacon'></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className='Salad'></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\n\r\nimport \"./Burger.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n  let tranformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (tranformedIngredients.length === 0) {\r\n    tranformedIngredients = <p>Please add ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className='Burger'>\r\n      <BurgerIngredient type='bread-top' />\r\n      {tranformedIngredients}\r\n      <BurgerIngredient type='bread-bottom' />\r\n    </div>\r\n  );\r\n};\r\nexport default burger;\r\n","import React from \"react\";\r\nimport \"./BulidControl.css\";\r\n\r\nconst bulidControl = (props) => (\r\n  <div className='BulidControl'>\r\n    <div className='Label'>{props.label}</div>\r\n    <button className='Less' onClick={props.removed}>\r\n      Less\r\n    </button>\r\n    <button className='More' onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default bulidControl;\r\n","import React from \"react\";\r\n\r\nimport \"./BuildControls.css\";\r\nimport BuildControl from \"./BulidControl/BulidControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst bulidControls = (props) => (\r\n  <div className='BuildControls'>\r\n    <p>\r\n      Total Price:\r\n      <strong>{props.price.toFixed()}</strong>\r\n    </p>\r\n    {controls.map((ctrl) => (\r\n      <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n      />\r\n    ))}\r\n    <button\r\n      className='OrderButton'\r\n      disabled={!props.disabled}\r\n      onClick={props.ordered}\r\n    >\r\n      Order Now\r\n    </button>\r\n  </div>\r\n);\r\nexport default bulidControls;\r\n","import React from \"react\";\r\n\r\nimport \"./Modal.css\";\r\nimport Auxilary from \"../../../hoc/Auxilary\";\r\nimport BackDrop from \"../BackDrop/Backdrop\";\r\n\r\nconst modal = (props) => (\r\n  <Auxilary>\r\n    <BackDrop show={props.show} clicked={props.modalClose} />\r\n    <div\r\n      className='Modal'\r\n      style={{\r\n        transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n        opacity: props.show ? \"1\" : \"0\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  </Auxilary>\r\n);\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst button = (props) => (\r\n  <button\r\n    className={[\"Button\", [props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;\r\n","import React from \"react\";\r\n\r\nimport Auxilary from \"../../../hoc/Auxilary\";\r\nimport Button from \"../../UI/Button/Button\";\r\nconst ordeSummary = (props) => {\r\n  const ingredient = Object.keys(props.ingredients).map((igKey) => {\r\n    return (\r\n      <li>\r\n        <span>{igKey}:</span>\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Auxilary>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with following ingredients:</p>\r\n      <ul>{ingredient}</ul>\r\n      <p>\r\n        <strong>Total Price:{props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to checkout</p>\r\n      <Button btnType='Danger' clicked={props.purchaseCanceled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType='Success' clicked={props.purchaseContinued}>\r\n        Continue\r\n      </Button>\r\n    </Auxilary>\r\n  );\r\n};\r\nexport default ordeSummary;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Auxilary from \"../../hoc/Auxilary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BulidControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 1.4,\r\n  meat: 11.2,\r\n  bacon: 0.7,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false,\r\n  };\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  addIngredient = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n  removeIngredient = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n  onModalClose = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    alert(\"You continue\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auxilary>\r\n        <Modal show={this.state.purchasing} modalClose={this.onModalClose}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            purchaseCanceled={this.onModalClose}\r\n            purchaseContinued={this.purchaseContinueHandler}\r\n            price={this.state.totalPrice}\r\n          />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BulidControls\r\n          ingredientAdded={this.addIngredient}\r\n          ingredientRemoved={this.removeIngredient}\r\n          price={this.state.totalPrice}\r\n          ordered={this.purchaseHandler}\r\n          disabled={this.state.purchasable}\r\n        />\r\n      </Auxilary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nfunction App() {\n  return (\n    <div className='App'>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}